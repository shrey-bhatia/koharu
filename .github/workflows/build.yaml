name: 'build'

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  # Matches version tags like v1.0.0
  pull_request:

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-15' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-15' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-2025'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-15' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: bun install

      - uses: Swatinem/rust-cache@v2

      - id: tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}

      - name: Get version
        id: version
        shell: bash
        run: echo "version=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].version')" >> $GITHUB_OUTPUT

      - id: artifacts
        shell: bash
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          for path in $(echo '${{ steps.tauri.outputs.artifactPaths }}' | jq -r '.[]'); do
            echo "$path" >> $GITHUB_OUTPUT
          done
          if [[ "${{ matrix.platform }}" == "windows-2025" ]]; then
            cd target/release
            7z a ../../koharu_${{ steps.version.outputs.version }}_x64-portable.zip koharu.exe *.dll
            echo "koharu_${{ steps.version.outputs.version }}_x64-portable.zip" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          files: ${{ steps.artifacts.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
